type: object
required:
  - poc
  - data_classification

definitions:
  # Allowed entries for poc items of type pagerduty
  poc_pagerduty:
    id: "#poc_pagerduty"
    type: object
    required:
      - pagerduty
    properties:
      pagerduty:
        type: string

  # Allowed entries for poc items of type Person
  poc_person:
    id: "#poc_person"
    type: object
    required:
      - name
      - email
    properties:
      name:
        type: string
      role:
        type: string
        enum:
        - Service Owner
        - DevOps
      email:
        type: string
        pattern: "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)"

  # format for web URLs  
  web_link:
    type: string
    pattern: "^(https|http)://"

  # language enumeration
  language_enum:
    type: string
    enum:
      - java
      - python
      - ruby
      - go
      - c
      - c++
      - javascript
      - scala
      - angular

  scope:
    type: string
    description: a single scope
    examples:
      - maxar.mps.read
      - digitalglobe.mcs.commandpath.use
      - ssl.flightops.command.use

  s3_object:
    type: object
    required:
      - bucket
    properties:
      bucket:
        type: string
        description: name of the bucket

  database_object:
    type: object
    required:
      - db_type
    properties:
      db_type:
        type: string
        enum:
          - postgres
          - oracle
          - aurora
      schema_name:
        type: string

  jms_object:
    type: object

  bpms_object:
    type: object

  data_classification:
    description: Sensitivity classification of the software stored in this repository
    type: array
    minItems: 1
    maxItems: 1
    items:
      type: string
      enum:
        - public
        - company_proprietary
        - sensitive
        - program_proprietary
        - regulated

properties:
  name:
    description: The name of the service/application/library. When possible, this should match the artifact ID of the software.
    type: string
    examples:
    - GBDX Catalog
    - GBDX Notebooks
    - SecureWatch
    - common-config-helper

  description:
    description: A description of the purpose of this software.
    type: string

  acronym:
    description: The acronym commonly used to refer to the software if one exists
    type: string
    examples:
    - MOG
    - BOMM
    - TACO

  artifact_type:
    description: Describes the type of artifact(s) contained within this repository.
    type: string
    enum:
    - Service
    - Library
    - Docker
    - Tool

  source:
    description: Link to the source code repository.
    type: string
    examples:
    - https://github.com/digitalglobe/gbdxtools

  department:
    description: The department within the organization that owns this software. It is often related to the "train" and is necessary for building boundary permissions for DevOps access to AWS resources owned by this service. See https://confluence-prod.us-gov-west-1.dg-govcloud-shared-services-01.satcloud.us/display/ECO/IAM+Strategy+Supporting+Multi-Tenant+Accounts
    type: string
    examples:
    - rapid

  train:
    description: The development train responsible for this software
    type: string
    examples:
    - CBS
    - Mission Planning

  team:
    description: Identifies the primary team responsible for developing this application
    type: string
    examples:
    - GBDX Core
    - GCS Denali

  language:
    description: The programming language (or languages) used in this application
    anyOf:
      - "$ref": "#/definitions/language_enum"
      - type: array
        items:
          minitems: 1
          "$ref": "#/definitions/language_enum"

  service_deploy_type:
    description: Describes the types of target deployments for services
    type: string
    enum:
    - CF
    - K8S
    - EC2
    - ECS
    - Fargate
    - EKS
    - lambda
    - BPMS

  regulated_data_details:
    description: Provides nuanced understanding for repositories that have a data_classification marked as "regulated"
    type: string
    enum:
    - itar_data
    - itar_code

  poc:
    description: The person or persons to contact about the service
    type: array
    minitems: 1
    items:
      anyOf:
        - "$ref": "#/definitions/poc_pagerduty"
        - "$ref": "#/definitions/poc_person"

  documentation:
    description: Links to the various types of documentation for this application
    type: array
    items:
      type: object
      properties:
        type:
          type: string
          enum:
            - external
            - internal
        url:
          "$ref": "#/definitions/web_link"
        wiki:
          "$ref": "#/definitions/web_link"
        api:
          "$ref": "#/definitions/web_link"
      required:
        - type

  status:
    type: array
    items:
      type: object
      required:
        - type
        - url
      properties:
        type:
          type: string
          enum:
            - uptime
            - status
        env:
          type: string
          description: environment for which this data applies
          default: prod
        url:
          "$ref": "#/definitions/web_link"
          examples:
            - http://status.geobigdata.io/

  dependencies:
    type: array
    description: This captures all services (internal or external) upon which this service depends. These are used as part of determining which services should be leveraged during 1-up integration testing. If a service consumers P2020 common configs, each config type should be called out here as well.
    items:
      type: object
      required:
        - name
        - source
      properties:
        name:
          type: string
          examples:
            - GBDX Catalog
        source:
          "$ref": "#/definitions/web_link"
          examples:
            - https://github.com/somecompany/complex-service
        endpoints:
          description: enumerates the individual verbs/endpoints utilized from this dependency
          type: array
          items:
            description: The HTTP Verb and the individual endpoint (from the root to the right) used by this service. This can include placeholder text to indicate variables in the endpoint path.
            type: string
            examples:
             - GET /
             - GET /status
             - GET /healthcheck
             - GET /orders
             - POST /orders
             - GET /orders/<order_id>
             - PUT /orders/<order_id>

  backing_services:
    type: array
    description: informational list of the state management dependencies that this service has (e.g., database, JMS queues, S3 buckets, etc.)
    items:
        anyOf:
            - "$ref": "#/definitions/database_object"
            - "$ref": "#/definitions/s3_object"
            - "$ref": "#/definitions/jms_object"
            - "$ref": "#/definitions/bpms_object"
            
  backing_data_stores:
    type: array
    description: Deprecated. Use backing_services instead. informational list of the state management dependencies that this service has (e.g., database, JMS queues, S3 buckets, etc.)
    items:
        anyOf:
            - "$ref": "#/definitions/database_object"
            - "$ref": "#/definitions/s3_object"
            - "$ref": "#/definitions/jms_object"
            - "$ref": "#/definitions/bpms_object"
       
  authentication_scopes_enforced:
    type: array
    description: these are the scopes that may be enforced in order to use the functionality of this service
    minitems: 0
    items:
      - "$ref": "#/definitions/scope"

  service_urls:
    type: array
    description: These are only needed when service discovery is not in use.
    items:
        required:
          - url
        properties:
          env:
            description: environment where this URL is valid
            type: string
            default: prod
          purpose:
            description: Describes the purpose of this URL. The root of the service is the nominal usage but additional URLs could be provided to specific functionality endpoints.
            type: string
            default: root
          url:
            type: string

  data_classification:
    "$ref": "#/definitions/data_classification"
